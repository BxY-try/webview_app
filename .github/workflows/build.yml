name: Build MTabs WebView

on: [push, pull_request]

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      SKIP_JDK_VERSION_CHECK: true  # Pastikan semua langkah memakai variabel ini secara global

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python environment (gunakan Python 3.10)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      # Install dependencies, termasuk paket JAXB untuk mendukung sdkmanager
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            build-essential \
            git \
            python3 \
            python3-dev \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev \
            libjaxb-api-java \
            libjaxb-java

      # Setup Java dengan versi 17 agar sdkmanager berjalan dengan benar
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Setup Android SDK (variabel SKIP_JDK_VERSION_CHECK sudah ada secara global)
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # Install Android SDK components dengan menambahkan JAXB ke classpath
      - name: Install Android SDK components
        run: |
          export SKIP_JDK_VERSION_CHECK=true  # Pastikan variabel ini diset untuk sesi ini
          # Tambahkan JAXB ke classpath agar sdkmanager dapat menemukan kelas JAXB
          export _JAVA_OPTIONS="-cp /usr/share/java/jaxb-api.jar:/usr/share/java/jaxb-impl.jar"
          sdkmanager --install "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"
          
      # Install paket Python yang dibutuhkan (Buildozer, Kivy, KivyMD, dll.)
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install Cython==0.29.33
          pip install -v buildozer==1.5.0
          pip install kivy==2.2.1
          pip install kivymd==1.1.1

      # Cache direktori global Buildozer untuk mempercepat build selanjutnya
      - name: Cache Buildozer global directory
        uses: actions/cache@v3
        with:
          path: ~/.buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      # Build APK dengan Buildozer
      - name: Build APK
        run: |
          export PATH=$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH
          export ANDROID_HOME=/usr/local/lib/android/sdk
          export ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk/25.2.9519653
          buildozer android debug
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
          ANDROID_HOME: /usr/local/lib/android/sdk
          ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/25.2.9519653

      # Upload APK sebagai artifact build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MTabs WebView APK
          path: bin/*.apk
